<?xml version="1.0"?>
<!-- Note: example launch file. Do not modify! -->
<launch>
  <arg name="loop_rate" default="100"/>
  <arg name="wait_for_transform" default="0.1"/>
  <arg name="controller_type" default="dual_quaternion"/>
  <arg name="gains" default="[2.0, 2.0, 2.0, 2.0, 2.0, 2.0]"/>
  <arg name="limits" default="[1.0, 1.0, 1.0, 0.5, 0.5, 0.5]"/>
  <arg name="sync" default="false"/>
  <arg name="twist_reference_frame" default="kuka_lwr_right_base_link"/>
  <arg name="target_pose_frame" default="kuka_lwr_right_base_link"/>
  <arg name="current_pose_reference_frame" default="kuka_lwr_right_base_link"/>
  <arg name="current_pose_link" default="kuka_lwr_right_7_link"/>
  <arg name="node_name" default="pose_controller"/>
  <arg name="use_remote_machine" default="false"/>
  <arg name="machine" default="None"/>

  <group if="$(arg use_remote_machine)">
    <!-- KUKA arm controller in simulation. -->
    <include file="$(find platform_gazebo)/launch/platform_gazebo.launch">
      <arg name="use_pantilt" default="false"/>
    </include>

    <!-- Transform the twist from the pose controller to the KUKA controller. -->
    <node name="twist_transformer" pkg="topic_tools" type="transform"
        args="/pose_controller/twist_out
        /kuka_lwr_right/joint_velocity_controller/ee_cmd_vel geometry_msgs/Twist
        'm.twist' --wait-for-start"/>

    <node pkg="udom_pose_control" type="pose_controller"
          name="$(arg node_name)" output="screen" machine="$(arg machine)">

      <!-- The type of controller to use. -->
      <param name="controller_type" type="str" value="$(arg controller_type)"/>

      <!-- The twist will be described with respect to this frame. -->
      <param name="reference_frame" type="str" value="$(arg twist_reference_frame)"/>

      <!-- Proportional gains for each of the six dimensions. -->
      <rosparam param="gains" subst_value="True"> $(arg gains)</rosparam>

      <!-- Velocity limits for each of the six dimensions (in m/s, rad/s). -->
      <rosparam param="limits" subst_value="True"> $(arg limits)</rosparam>

      <!-- Whether to synchronize all velocities such that they reach the target
      at the same time. -->
      <param name="sync" type="bool" value="$(arg sync)"/>

      <!-- Node cycle rate (in Hz). -->
      <param name="loop_rate" type="double" value="$(arg loop_rate)"/>
    </node>

    <!-- Target pose (from GUI). -->
    <node pkg="udom_pose_control" type="pose_mock_up_gui"
          name="pose_mock_up_gui" output="screen" machine="$(arg machine)">

      <!-- The reference frame of the mock-up pose. -->
      <param name="reference_frame" type="str" value="$(arg target_pose_frame)"/>

      <!-- Node cycle rate (in Hz). -->
      <param name="loop_rate" type="double" value="$(arg loop_rate)"/>

      <remap from="~mock_up_pose" to="/$(arg node_name)/target_pose"/>
    </node>

    <!-- Current pose (extracted from end-effector link). -->
    <node pkg="udom_geometric_transformation" type="transform_to_pose_converter"
          name="transform_to_pose_converter" output="screen" machine="$(arg machine)">
      <!-- Node cycle rate (in Hz). -->
      <param name="loop_rate" type="double" value="$(arg loop_rate)"/>

      <!-- Maximum duration to wait for a transform (in seconds). -->
      <param name="wait_for_transform" type="double" value="$(arg wait_for_transform)"/>

      <!-- Frame on which the target_frame will be expressed. -->
      <param name="reference_frame" type="str" value="$(arg current_pose_reference_frame)"/>

      <!-- The frame which will be expressed with respect to the reference_frame. -->
      <param name="target_frame" type="str" value="$(arg current_pose_link)"/>

      <remap from="~pose" to="/$(arg node_name)/current_pose"/>
    </node>
  </group>

  <group unless="$(arg use_remote_machine)">
    <!-- KUKA arm controller in simulation. -->
    <include file="$(find platform_gazebo)/launch/platform_gazebo.launch">
      <arg name="use_pantilt" default="false"/>
    </include>

    <node name="twist_transformer" pkg="topic_tools" type="transform"
        args="/pose_controller/twist_out
        /kuka_lwr_right/joint_velocity_controller/ee_cmd_vel geometry_msgs/Twist
        'm.twist' --wait-for-start"/>

    <node pkg="udom_pose_control" type="pose_controller"
          name="$(arg node_name)" output="screen">

      <!-- The type of controller to use. -->
      <param name="controller_type" type="str" value="$(arg controller_type)"/>

      <!-- The twist will be described with respect to this frame. -->
      <param name="reference_frame" type="str" value="$(arg twist_reference_frame)"/>

      <!-- Proportional gains for each of the six dimensions. -->
      <rosparam param="gains" subst_value="True"> $(arg gains)</rosparam>

      <!-- Velocity limits for each of the six dimensions (in m/s, rad/s). -->
      <rosparam param="limits" subst_value="True"> $(arg limits)</rosparam>

      <!-- Whether to synchronize all velocities such that they reach the target
      at the same time. -->
      <param name="sync" type="bool" value="$(arg sync)"/>

      <!-- Node cycle rate (in Hz). -->
      <param name="loop_rate" type="double" value="$(arg loop_rate)"/>
    </node>

    <!-- Target pose (from GUI). -->
    <node pkg="udom_pose_control" type="pose_mock_up_gui"
          name="pose_mock_up_gui" output="screen">

      <!-- The reference frame of the mock-up pose. -->
      <param name="reference_frame" type="str" value="$(arg target_pose_frame)"/>

      <!-- Node cycle rate (in Hz). -->
      <param name="loop_rate" type="double" value="$(arg loop_rate)"/>

      <remap from="~mock_up_pose" to="/$(arg node_name)/target_pose"/>
    </node>

    <!-- Current pose (extracted from end-effector link). -->
    <node pkg="udom_geometric_transformation" type="transform_to_pose_converter"
          name="transform_to_pose_converter" output="screen">
      <!-- Node cycle rate (in Hz). -->
      <param name="loop_rate" type="double" value="$(arg loop_rate)"/>

      <!-- Maximum duration to wait for a transform (in seconds). -->
      <param name="wait_for_transform" type="double" value="$(arg wait_for_transform)"/>

      <!-- Frame on which the target_frame will be expressed. -->
      <param name="reference_frame" type="str" value="$(arg current_pose_reference_frame)"/>

      <!-- The frame which will be expressed with respect to the reference_frame. -->
      <param name="target_frame" type="str" value="$(arg current_pose_link)"/>

      <remap from="~pose" to="/$(arg node_name)/current_pose"/>
    </node>
  </group>
</launch>
